https://grid.malven.co/


https://developer.mozilla.org/en-US/docs/Web/CSS/calc

Use data attributes data-* or data-id='something' in html to obfuscate the information. 
- case sensitive
- use for styling with css as well
- creates separation between CSS-> classes vs JS->data

https://www.scaler.com/topics/data-attribute-in-html/

stacking cards:
/* 1. stack images on top of each other  */
/* proposed methods: a) z-index: 0;      */
/* https://stackoverflow.com/questions/45762158/overlapping-images-in-css-grid */
/* 2. transform: translate(-50%, -50%); */

-webkit- for css:
https://www.geeksforgeeks.org/how-to-create-linear-gradient-text-using-html-and-css/
https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/linear-gradient

/**********************************************/
/* experimentation flex */
/* (1) - transform or translate */
/* .class:nth-child(N) {
    transform:x, y;
} */
/* (2) - margin*/
/* .class:nth-child(N) {
    margin-top: -10px)
} */
/* (3) position: relative */
/* .class:nth-child(N) {
    position: relative;
    top: -100px;
} */

/* (4) position: absolute -> make sure to make parent container position:relative*/
/* .class:nth-child(N) {
    position: absolute;
    top: -100px;
} */

/* (5) position: absolute -> make sure to make parent container position:relative*/
/* .class:nth-child(N) {
    position: absolute;
    top: 100px;
} */

/* (6) position: absolute -> make sure to make parent container position:relative*/
/* .class:nth-child(N) {
    position: absolute;
    z-index: -1; <-- order on top of another element
    top: 100px;
} */


/**********************************************/
MDN drag and drop ->
https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations

Drag Data
All drag events have a property called dataTransfer which holds the drag data (dataTransfer is a DataTransfer object).

When a drag occurs, data must be associated with the drag which identifies what is being dragged. For example, when dragging the selected text within a textbox, the data associated with the drag data item is the text itself. Similarly, when dragging a link on a web page, the drag data item is the link's URL.

The drag data contains two pieces of information, the type (or format) of the data, and the data's value. The format is a type string (such as text/plain for text data), and the value is a string of text. When the drag begins, you add data by providing a type and the data. During the drag, in an event listener for the dragenter and dragover events, you use the data types of the data being dragged to check whether a drop is allowed. For instance, a drop target that accepts links would check for the type text/uri-list. During a drop event, a listener would retrieve the data being dragged and insert it at the drop location.

The drag data's types property returns a list of MIME-type like strings, such as text/plain or image/jpeg. You can also create your own types. The most commonly used types are listed in the article Recommended Drag Types.

A drag may include data items of several different types. This allows data to be provided in more specific types, often custom types, yet still provide fallback data for drop targets that do not support more specific types. It is usually the case that the least specific type will be normal text data using the type text/plain. This data will be a simple textual representation.

To set a drag data item within the dataTransfer, use the setData() method. It takes two arguments: the type of data and the data value. For example:

event.dataTransfer.setData("text/plain", "Text to drag");